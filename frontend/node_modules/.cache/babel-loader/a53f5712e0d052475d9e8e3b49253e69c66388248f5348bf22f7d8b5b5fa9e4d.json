{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\nimport RegisterView from '../views/RegisterView.vue';\nimport LoginView from '../views/LoginView.vue';\nimport UserProfilePage from '../views/UserProfilePage.vue';\nimport { getJwtToken } from '../utils.js';\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: [{\n    path: '/',\n    name: 'Home',\n    component: HomeView\n  }, {\n    path: '/login',\n    name: 'login',\n    component: LoginView\n  }, {\n    path: '/register',\n    name: 'Register',\n    component: RegisterView\n  }, {\n    path: '/userprofile',\n    name: 'User',\n    component: UserProfilePage\n  }]\n});\nrouter.beforeEach((to, from, next) => {\n  //check if the user is logged in\n  const isLoggedIn = !!getJwtToken();\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","HomeView","RegisterView","LoginView","UserProfilePage","getJwtToken","router","history","process","env","BASE_URL","routes","path","name","component","beforeEach","to","from","next","isLoggedIn"],"sources":["/Users/Hamid/Coding/OC/Project07/Aug07 - sqlite/OCproject07/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router'\nimport HomeView from '../views/HomeView.vue'\nimport RegisterView from '../views/RegisterView.vue'  \nimport LoginView from '../views/LoginView.vue'  \nimport UserProfilePage from '../views/UserProfilePage.vue' \nimport { getJwtToken } from '../utils.js'\n\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes: [\n    { \n      path: '/',\n      name: 'Home',\n      component: HomeView\n    },\n    { path: '/login',\n      name: 'login',\n      component: LoginView\n    },\n    {\n      path: '/register',\n      name: 'Register', \n      component: RegisterView\n    },\n    {\n      path: '/userprofile',\n      name: 'User', \n      component: UserProfilePage\n    }\n\n  ]\n})\n\nrouter.beforeEach((to,from,next) => {\n  //check if the user is logged in\n  const isLoggedIn = !!getJwtToken();\n\n  \n})\nexport default router"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAGzC,MAAMC,MAAM,GAAGP,YAAY,CAAC;EAC1BQ,OAAO,EAAEP,gBAAgB,CAACQ,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC;EAC/CC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,GAAG;IACTC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEb;EACb,CAAC,EACD;IAAEW,IAAI,EAAE,QAAQ;IACdC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEX;EACb,CAAC,EACD;IACES,IAAI,EAAE,WAAW;IACjBC,IAAI,EAAE,UAAU;IAChBC,SAAS,EAAEZ;EACb,CAAC,EACD;IACEU,IAAI,EAAE,cAAc;IACpBC,IAAI,EAAE,MAAM;IACZC,SAAS,EAAEV;EACb,CAAC;AAGL,CAAC,CAAC;AAEFE,MAAM,CAACS,UAAU,CAAC,CAACC,EAAE,EAACC,IAAI,EAACC,IAAI,KAAK;EAClC;EACA,MAAMC,UAAU,GAAG,CAAC,CAACd,WAAW,CAAC,CAAC;AAGpC,CAAC,CAAC;AACF,eAAeC,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}