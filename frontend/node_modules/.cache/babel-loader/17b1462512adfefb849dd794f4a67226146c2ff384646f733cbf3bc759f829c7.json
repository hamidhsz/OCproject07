{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { setJwtToken } from \"@/utils\";\nimport AuthenticationService from \"../services/AuthenticationService\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: null\n    };\n  },\n  methods: {\n    async login() {\n      try {\n        const response = await AuthenticationService.login({\n          email: this.email,\n          password: this.password\n        });\n        console.log(\"res: \", response);\n        const jwtToken = response.data.token;\n        setJwtToken(jwtToken);\n        this.$router.push('/userprofile');\n      } catch (error) {\n        this.error = error.response.data.error;\n      }\n    }\n  }\n};","map":{"version":3,"names":["setJwtToken","AuthenticationService","data","email","password","error","methods","login","response","console","log","jwtToken","token","$router","push"],"sources":["/Users/Hamid/Coding/OC/Project07/Aug07 - sqlite/OCproject07/frontend/src/views/LoginView.vue"],"sourcesContent":["<template>\n  <main>\n    <div>\n      <h1>Log in</h1>\n      <p>\n        Lorem, ipsum dolor sit amet consectetur adipisicing elit. Ex illum quia\n        quasi quibusdam consectetur doloremque ab fuga iste consequatur\n        excepturi aliquid corporis provident, culpa cumque, animi deserunt optio\n        aperiam autem!\n      </p>\n\n      <input type=\"email\" name=\"email\" v-model=\"email\" placeholder=\"email\" />\n\n      <input\n        type=\"password\"\n        name=\"password\"\n        v-model=\"password\"\n        placeholder=\"password\"\n      />\n      <br />\n      <div class=\"error\" v-html=\"error\" />\n      <br />\n      <button @click=\"login\">Login</button>\n    </div>\n  </main>\n</template>\n\n<script>\nimport { setJwtToken } from \"@/utils\";\nimport AuthenticationService from \"../services/AuthenticationService\";\nexport default {\n  data() {\n    return {\n      email: \"\",\n      password: \"\",\n      error: null,\n    };\n  },\n\n  methods: {\n    async login() {\n      try {\n        const response = await AuthenticationService.login({\n          email: this.email,\n          password: this.password,\n        });\n        console.log(\"res: \", response);\n        \n        const jwtToken = response.data.token;\n        \n        setJwtToken(jwtToken);\n        \n        this.$router.push('/userprofile')\n\n      } catch (error) {\n        this.error = error.response.data.error;\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.container {\n  max-width: 400px;\n  margin: 0 auto;\n  padding: 20px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  text-align: center;\n}\n\nh1 {\n  color: #333;\n}\n\n.error {\n  color: red;\n}\n\ninput {\n  margin: 10px 0;\n  padding: 10px;\n  width: 50%; /* Set the input width to 50% */\n  display: block; /* Make the input a block element */\n  margin: 0 auto; /* Center the input horizontally */\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\ninput[name=\"password\"] {\n  margin-top: 10px;\n}\n\nbutton {\n  margin-top: 10px;\n  padding: 10px 20px;\n  background-color: #007bff;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  display: block; /* Make the button a block element */\n  margin: 0 auto; /* Center the button horizontally */\n}\n\nbutton:hover {\n  background-color: #0056b3;\n}\n</style>\n"],"mappings":";AA4BA,SAASA,WAAU,QAAS,SAAS;AACrC,OAAOC,qBAAoB,MAAO,mCAAmC;AACrE,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EAEDC,OAAO,EAAE;IACP,MAAMC,KAAKA,CAAA,EAAG;MACZ,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,qBAAqB,CAACM,KAAK,CAAC;UACjDJ,KAAK,EAAE,IAAI,CAACA,KAAK;UACjBC,QAAQ,EAAE,IAAI,CAACA;QACjB,CAAC,CAAC;QACFK,OAAO,CAACC,GAAG,CAAC,OAAO,EAAEF,QAAQ,CAAC;QAE9B,MAAMG,QAAO,GAAIH,QAAQ,CAACN,IAAI,CAACU,KAAK;QAEpCZ,WAAW,CAACW,QAAQ,CAAC;QAErB,IAAI,CAACE,OAAO,CAACC,IAAI,CAAC,cAAc;MAElC,EAAE,OAAOT,KAAK,EAAE;QACd,IAAI,CAACA,KAAI,GAAIA,KAAK,CAACG,QAAQ,CAACN,IAAI,CAACG,KAAK;MACxC;IACF;EACF;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}